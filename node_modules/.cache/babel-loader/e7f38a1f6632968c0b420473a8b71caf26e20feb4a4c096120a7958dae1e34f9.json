{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AYAN\\\\Desktop\\\\FYP\\\\Front-end\\\\fyp\\\\src\\\\Incidents.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport Modal from './Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Incidents = () => {\n  _s();\n  const [selectedIncident, setSelectedIncident] = useState(null);\n  const navigate = useNavigate();\n  const goBackToDashboard = () => {\n    navigate('/dashboard');\n  };\n  // Replace with your actual data\n  const incidents = [{\n    id: 2,\n    src: '3.mp4',\n    alt: 'Fire Video',\n    type: 'video',\n    fileName: 'Forest.mp4',\n    date: '2021-08-20',\n    timestamp: '5:35'\n  }, {\n    id: 2,\n    src: '2.jpg',\n    alt: 'Stacked logs',\n    type: 'image',\n    fileName: 'Forest.jpg',\n    date: '2021-07-20',\n    timestamp: '15:35'\n  }, {\n    id: 3,\n    src: '3.jpg',\n    alt: 'Blue wooden texture',\n    alt: 'Surveillance video',\n    type: 'image',\n    fileName: 'Surveillance.jpg',\n    date: '2021-07-21',\n    timestamp: '12:15'\n  } // Incidents.js\n\n  // ... your incidents data\n  ];\n  const handleOpenModal = incident => {\n    setSelectedIncident(incident);\n  };\n\n  // Close the modal\n  const handleCloseModal = () => {\n    setSelectedIncident(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-100 p-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-6\",\n        children: \"Boranup Bungalo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 md:grid-cols-3 gap-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), selectedIncident && /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: Boolean(selectedIncident),\n        handleClose: handleCloseModal,\n        content: {\n          src: selectedIncident.src,\n          type: selectedIncident.type\n        },\n        details: {\n          fileName: selectedIncident.fileName,\n          date: selectedIncident.date,\n          timestamp: selectedIncident.timestamp\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mb-4 text-indigo-600 hover:text-indigo-800\",\n        onClick: goBackToDashboard,\n        children: \"\\u2190 Back to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Incidents, \"71NeGpBZ8X1OpN6GfsMlW6WcOcU=\", false, function () {\n  return [useNavigate];\n});\n_c = Incidents;\nexport default Incidents;\nvar _c;\n$RefreshReg$(_c, \"Incidents\");","map":{"version":3,"names":["useNavigate","React","useState","Modal","jsxDEV","_jsxDEV","Incidents","_s","selectedIncident","setSelectedIncident","navigate","goBackToDashboard","incidents","id","src","alt","type","fileName","date","timestamp","handleOpenModal","incident","handleCloseModal","children","className","_jsxFileName","lineNumber","columnNumber","isOpen","Boolean","handleClose","content","details","onClick","_c","$RefreshReg$"],"sources":["C:/Users/AYAN/Desktop/FYP/Front-end/fyp/src/Incidents.js"],"sourcesContent":["\r\nimport { useNavigate } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\nimport Modal from './Modal';\r\n\r\nconst Incidents = () => {\r\nconst [selectedIncident, setSelectedIncident] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n  const goBackToDashboard = () => {\r\n    navigate('/dashboard');\r\n  };\r\n  // Replace with your actual data\r\n  const incidents = [\r\n    { id: 2, src: '3.mp4', alt: 'Fire Video', type: 'video', fileName: 'Forest.mp4', date: '2021-08-20', timestamp: '5:35'},\r\n    { id: 2, src: '2.jpg', alt: 'Stacked logs', type: 'image', fileName: 'Forest.jpg', date: '2021-07-20', timestamp: '15:35'},\r\n    { id: 3, src: '3.jpg', alt: 'Blue wooden texture', alt: 'Surveillance video', type: 'image', fileName: 'Surveillance.jpg', date: '2021-07-21', timestamp: '12:15' },// Incidents.js\r\n\r\n    // ... your incidents data\r\n  ];\r\n\r\n  const handleOpenModal = (incident) => {\r\n    setSelectedIncident(incident);\r\n  };\r\n\r\n  // Close the modal\r\n  const handleCloseModal = () => {\r\n    setSelectedIncident(null);\r\n  };\r\n  return (\r\n    <div>\r\n<div className=\"bg-gray-100 p-5\">\r\n      <h2 className=\"text-2xl font-semibold mb-6\">Boranup Bungalo</h2>\r\n      <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\r\n        {/* ... same as previous implementation */}\r\n      </div>\r\n      {selectedIncident && (\r\n        <Modal\r\n          isOpen={Boolean(selectedIncident)}\r\n          handleClose={handleCloseModal}\r\n          content={{ src: selectedIncident.src, type: selectedIncident.type }}\r\n          details={{ fileName: selectedIncident.fileName, date: selectedIncident.date, timestamp: selectedIncident.timestamp }}\r\n        />\r\n      )}\r\n    \r\n      <button \r\n        className=\"mb-4 text-indigo-600 hover:text-indigo-800\" \r\n        onClick={goBackToDashboard}>\r\n        ‚Üê Back to Dashboard\r\n      </button>\r\n    </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Incidents;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}