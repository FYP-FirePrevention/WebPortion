{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AYAN\\\\Desktop\\\\FYP\\\\Front-end\\\\fyp\\\\src\\\\Incidents.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from './Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Incidents = () => {\n  _s();\n  const [selectedIncident, setSelectedIncident] = useState(null);\n\n  // Example incidents array\n  const incidents = [{\n    id: 1,\n    src: 'path/to/image1.jpg',\n    alt: 'Forest in fog',\n    type: 'image',\n    fileName: 'Forest.jpg',\n    date: '2021-07-20',\n    timestamp: '15:35'\n  }, {\n    id: 2,\n    src: 'path/to/video.mp4',\n    alt: 'Surveillance video',\n    type: 'video',\n    fileName: 'Surveillance.mp4',\n    date: '2021-07-21',\n    timestamp: '12:15'\n  }\n  // ... more incidents\n  ];\n\n  // Open the modal with the selected incident\n  const handleOpenModal = incident => {\n    setSelectedIncident(incident);\n  };\n\n  // Close the modal\n  const handleCloseModal = () => {\n    setSelectedIncident(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100 p-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-6\",\n      children: \"Boranup Bungalo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 md:grid-cols-3 gap-4\",\n      children: incidents.map(incident => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aspect-w-1 aspect-h-1\",\n        onClick: () => handleOpenModal(incident),\n        children: incident.type === 'video' ? /*#__PURE__*/_jsxDEV(\"video\", {\n          controls: true,\n          src: incident.src,\n          className: \"object-cover rounded-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: incident.src,\n          alt: incident.alt,\n          className: \"object-cover rounded-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)\n      }, incident.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), selectedIncident && /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: Boolean(selectedIncident),\n      handleClose: handleCloseModal,\n      content: {\n        src: selectedIncident.src,\n        type: selectedIncident.type\n      },\n      details: {\n        fileName: selectedIncident.fileName,\n        date: selectedIncident.date,\n        timestamp: selectedIncident.timestamp\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Incidents, \"53h26HpKzoEBSO3rGDXhooMOQIY=\");\n_c = Incidents;\nexport default Incidents;\nvar _c;\n$RefreshReg$(_c, \"Incidents\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","Incidents","_s","selectedIncident","setSelectedIncident","incidents","id","src","alt","type","fileName","date","timestamp","handleOpenModal","incident","handleCloseModal","className","children","_jsxFileName","lineNumber","columnNumber","map","onClick","controls","isOpen","Boolean","handleClose","content","details","_c","$RefreshReg$"],"sources":["C:/Users/AYAN/Desktop/FYP/Front-end/fyp/src/Incidents.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Modal from './Modal';\r\n\r\nconst Incidents = () => {\r\n  const [selectedIncident, setSelectedIncident] = useState(null);\r\n\r\n  // Example incidents array\r\n  const incidents = [\r\n    { id: 1, src: 'path/to/image1.jpg', alt: 'Forest in fog', type: 'image', fileName: 'Forest.jpg', date: '2021-07-20', timestamp: '15:35' },\r\n    { id: 2, src: 'path/to/video.mp4', alt: 'Surveillance video', type: 'video', fileName: 'Surveillance.mp4', date: '2021-07-21', timestamp: '12:15' },\r\n    // ... more incidents\r\n  ];\r\n\r\n  // Open the modal with the selected incident\r\n  const handleOpenModal = (incident) => {\r\n    setSelectedIncident(incident);\r\n  };\r\n\r\n  // Close the modal\r\n  const handleCloseModal = () => {\r\n    setSelectedIncident(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 p-5\">\r\n      <h2 className=\"text-2xl font-semibold mb-6\">Boranup Bungalo</h2>\r\n      <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\r\n        {incidents.map((incident) => (\r\n          <div key={incident.id} className=\"aspect-w-1 aspect-h-1\" onClick={() => handleOpenModal(incident)}>\r\n            {incident.type === 'video' ? (\r\n              <video controls src={incident.src} className=\"object-cover rounded-lg\" />\r\n            ) : (\r\n              <img src={incident.src} alt={incident.alt} className=\"object-cover rounded-lg\" />\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {selectedIncident && (\r\n        <Modal\r\n          isOpen={Boolean(selectedIncident)}\r\n          handleClose={handleCloseModal}\r\n          content={{ src: selectedIncident.src, type: selectedIncident.type }}\r\n          details={{ fileName: selectedIncident.fileName, date: selectedIncident.date, timestamp: selectedIncident.timestamp }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Incidents;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}