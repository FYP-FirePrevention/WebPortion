{"ast":null,"code":"import axios from \"axios\";\n\n// base url\nconst BASE_URL = \"http://localhost:3500\";\n\n// login\n\nasync function login(email, password) {\n  try {\n    // Replace 'email' and 'password' with the actual field names expected by your login endpoint\n    const response = await axios.post(`${BASE_URL}/login`, {\n      email: email,\n      password: password\n    }, {\n      \"Content-Type\": \"application/json\"\n    });\n\n    // If the request was successful, log the response data\n    console.log(\"Login successful:\", response.data);\n\n    // You might want to return the response or a specific part of it, such as a token\n    return response.data;\n  } catch (error) {\n    // If the request fails, log or handle the error\n    console.error(\"Login failed:\", error.response ? error.response.data : error.message);\n\n    // You might want to throw the error or return null\n  }\n}\nexport { login };","map":{"version":3,"names":["axios","BASE_URL","login","email","password","response","post","console","log","data","error","message"],"sources":["C:/Users/AYAN/Desktop/FYP/WebPortion/WebPortion-main/src/utils/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// base url\r\nconst BASE_URL = \"http://localhost:3500\";\r\n\r\n// login\r\n\r\nasync function login(email, password) {\r\n  try {\r\n    // Replace 'email' and 'password' with the actual field names expected by your login endpoint\r\n    const response = await axios.post(\r\n      `${BASE_URL}/login`,\r\n      {\r\n        email: email,\r\n        password: password,\r\n      },\r\n      {\r\n        \"Content-Type\": \"application/json\",\r\n      }\r\n    );\r\n\r\n    // If the request was successful, log the response data\r\n    console.log(\"Login successful:\", response.data);\r\n\r\n    // You might want to return the response or a specific part of it, such as a token\r\n    return response.data;\r\n  } catch (error) {\r\n    // If the request fails, log or handle the error\r\n    console.error(\r\n      \"Login failed:\",\r\n      error.response ? error.response.data : error.message\r\n    );\r\n\r\n    // You might want to throw the error or return null\r\n  }\r\n}\r\n\r\nexport { login };\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,QAAQ,GAAG,uBAAuB;;AAExC;;AAEA,eAAeC,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;EACpC,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAC9B,GAAEL,QAAS,QAAO,EACnB;MACEE,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAEA;IACZ,CAAC,EACD;MACE,cAAc,EAAE;IAClB,CACF,CAAC;;IAED;IACAG,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,QAAQ,CAACI,IAAI,CAAC;;IAE/C;IACA,OAAOJ,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd;IACAH,OAAO,CAACG,KAAK,CACX,eAAe,EACfA,KAAK,CAACL,QAAQ,GAAGK,KAAK,CAACL,QAAQ,CAACI,IAAI,GAAGC,KAAK,CAACC,OAC/C,CAAC;;IAED;EACF;AACF;AAEA,SAAST,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}