{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AYAN\\\\Desktop\\\\FYP\\\\WebPortion\\\\WebPortion-main\\\\src\\\\Profile.js\",\n  _s = $RefreshSig$();\n// Profile.js\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser, faPlus, faEllipsisH, faSort } from \"@fortawesome/free-solid-svg-icons\";\nimport AddUser from \"./AddUser\";\nimport { faUpload } from \"@fortawesome/free-solid-svg-icons\";\nimport { getProfileDetails, updateCCTVIps } from \"./utils/api\";\nimport { useAuth } from \"./context/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  // const { userMail, isAuthenticated } = useAuth();\n  // const navigate = useNavigate();\n  // const [isLoading, setIsLoading] = useState(false);\n\n  // // In a real application, this data would likely be fetched from an API\n  // const [profileData, setProfileData] = useState({\n  //   fullName: \"\",\n  //   email: \"\",\n  //   city: \"\",\n  //   cctvCameras: [],\n  // });\n\n  // const handleCancel = () => {\n  //   navigate(\"/dashboard\"); // Replace with your actual dashboard route\n  // };\n\n  // const handleCameraIPChange = (cameraId, newIP) => {\n  //   setProfileData((prevProfileData) => ({\n  //     ...prevProfileData,\n  //     cctvCameras: prevProfileData.cctvCameras.map((camera) =>\n  //       camera.id === cameraId ? { ...camera, ip: newIP } : camera\n  //     ),\n  //   }));\n  // };\n\n  // const handleSaveChanges = () => {\n  //   // Implement your save logic here\n  //   setIsLoading(true);\n  //   console.log(\"Save profile changes\");\n  //   updateCCTVIps(\n  //     userMail,\n  //     profileData.cctvCameras.map((camera) => camera.ip)\n  //   ).then((data) => {\n  //     setIsLoading(false);\n  //   });\n\n  //   navigate(\"/dashboard\"); // Replace with your actual dashboard route\n  // };\n\n  // // called when a component is renderend\n  // useEffect(() => {\n  //   if (!isAuthenticated) return;\n\n  //   getProfileDetails(userMail).then((data) => {\n  //     const {\n  //       userProfile: { userCity, noOfCCTV, userName, userMail },\n  //       cctvData: { ips },\n  //     } = data;\n\n  //     setProfileData({\n  //       fullName: userName,\n  //       city: userCity,\n  //       email: userMail,\n  //       cctvCameras: ips.map((value, index) => ({ id: index, ip: value })),\n  //     });\n  //   });\n  // }, []);\n\n  // return (\n  //   <div className=\"bg-white shadow overflow-hidden sm:rounded-lg\">\n  //     <div className=\"px-4 py-5 sm:px-6\">\n  //       <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Profile</h3>\n  //       <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">\n  //         Personal details and connected CCTV cameras.\n  //       </p>\n  //     </div>\n  //     <div className=\"border-t border-gray-200\">\n  //       <dl>\n  //         <div className=\"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n  //           <dt className=\"text-sm font-medium text-gray-500\">Full name</dt>\n  //           <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n  //             {profileData.fullName}\n  //           </dd>\n  //         </div>\n  //         <div className=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n  //           <dt className=\"text-sm font-medium text-gray-500\">Email address</dt>\n  //           <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n  //             {profileData.email}\n  //           </dd>\n  //         </div>\n  //         <div className=\"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n  //           <dt className=\"text-sm font-medium text-gray-500\">City</dt>\n  //           <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n  //             {profileData.city}\n  //           </dd>\n  //         </div>\n  //         <div className=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n  //           <dt className=\"text-sm font-medium text-gray-500\">\n  //             Connected CCTV Cameras\n  //           </dt>\n  //           <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n  //             <ul className=\"border border-gray-200 rounded-md divide-y divide-gray-200\">\n  //               {profileData.cctvCameras.map((camera) => (\n  //                 <li\n  //                   key={camera.id}\n  //                   className=\"pl-3 pr-4 py-3 flex items-center justify-between text-sm\"\n  //                 >\n  //                   <div className=\"w-0 flex-1 flex items-center\">\n  //                     <input\n  //                       id={`camera-ip-${camera.id}`}\n  //                       type=\"text\"\n  //                       value={camera.ip}\n  //                       onChange={(e) =>\n  //                         handleCameraIPChange(camera.id, e.target.value)\n  //                       }\n  //                       disabled={isLoading}\n  //                       className=\"mt-1 p-2 w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\n  //                     />\n  //                   </div>\n  //                 </li>\n  //               ))}\n  //             </ul>\n  //           </dd>\n  //         </div>\n  //       </dl>\n  //     </div>\n  //     <div className=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\n  //       <button\n  //         onClick={handleCancel}\n  //         className=\"inline-flex justify-center py-2 px-4 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n  //       >\n  //         Cancel\n  //       </button>\n  //       <button\n  //         onClick={handleSaveChanges}\n  //         className=\"ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n  //       >\n  //         {isLoading ? \"Saving ...\" : \"Save changes\"}\n  //       </button>\n  //     </div>\n  //   </div>\n  // );\n\n  const [users, setUsers] = useState([\n    // Example users data\n    // Add more user objects\n  ]);\n  const navigate = useNavigate();\n  const onAddUser = userData => {\n    // Here you would add the logic to send userData to the backend\n    // For now, we'll just add it to the local state\n    setUsers([...users, {\n      ...userData,\n      id: users.length + 1\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddUser, {\n      onAddUser: onAddUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"AwQSgNq2/iLpxMkq4vak2EdCxr4=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","FontAwesomeIcon","faUser","faPlus","faEllipsisH","faSort","AddUser","faUpload","getProfileDetails","updateCCTVIps","useAuth","jsxDEV","_jsxDEV","Profile","_s","users","setUsers","navigate","onAddUser","userData","id","length","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/AYAN/Desktop/FYP/WebPortion/WebPortion-main/src/Profile.js"],"sourcesContent":["// Profile.js\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faUser,\n  faPlus,\n  faEllipsisH,\n  faSort,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AddUser from \"./AddUser\";\nimport { faUpload } from \"@fortawesome/free-solid-svg-icons\";\nimport { getProfileDetails, updateCCTVIps } from \"./utils/api\";\nimport { useAuth } from \"./context/UserContext\";\n\nconst Profile = () => {\n  // const { userMail, isAuthenticated } = useAuth();\n  // const navigate = useNavigate();\n  // const [isLoading, setIsLoading] = useState(false);\n\n  // // In a real application, this data would likely be fetched from an API\n  // const [profileData, setProfileData] = useState({\n  //   fullName: \"\",\n  //   email: \"\",\n  //   city: \"\",\n  //   cctvCameras: [],\n  // });\n\n  // const handleCancel = () => {\n  //   navigate(\"/dashboard\"); // Replace with your actual dashboard route\n  // };\n\n  // const handleCameraIPChange = (cameraId, newIP) => {\n  //   setProfileData((prevProfileData) => ({\n  //     ...prevProfileData,\n  //     cctvCameras: prevProfileData.cctvCameras.map((camera) =>\n  //       camera.id === cameraId ? { ...camera, ip: newIP } : camera\n  //     ),\n  //   }));\n  // };\n\n  // const handleSaveChanges = () => {\n  //   // Implement your save logic here\n  //   setIsLoading(true);\n  //   console.log(\"Save profile changes\");\n  //   updateCCTVIps(\n  //     userMail,\n  //     profileData.cctvCameras.map((camera) => camera.ip)\n  //   ).then((data) => {\n  //     setIsLoading(false);\n  //   });\n\n  //   navigate(\"/dashboard\"); // Replace with your actual dashboard route\n  // };\n\n  // // called when a component is renderend\n  // useEffect(() => {\n  //   if (!isAuthenticated) return;\n\n  //   getProfileDetails(userMail).then((data) => {\n  //     const {\n  //       userProfile: { userCity, noOfCCTV, userName, userMail },\n  //       cctvData: { ips },\n  //     } = data;\n\n  //     setProfileData({\n  //       fullName: userName,\n  //       city: userCity,\n  //       email: userMail,\n  //       cctvCameras: ips.map((value, index) => ({ id: index, ip: value })),\n  //     });\n  //   });\n  // }, []);\n\n  // return (\n  //   <div className=\"bg-white shadow overflow-hidden sm:rounded-lg\">\n  //     <div className=\"px-4 py-5 sm:px-6\">\n  //       <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Profile</h3>\n  //       <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">\n  //         Personal details and connected CCTV cameras.\n  //       </p>\n  //     </div>\n  //     <div className=\"border-t border-gray-200\">\n  //       <dl>\n  //         <div className=\"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n  //           <dt className=\"text-sm font-medium text-gray-500\">Full name</dt>\n  //           <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n  //             {profileData.fullName}\n  //           </dd>\n  //         </div>\n  //         <div className=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n  //           <dt className=\"text-sm font-medium text-gray-500\">Email address</dt>\n  //           <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n  //             {profileData.email}\n  //           </dd>\n  //         </div>\n  //         <div className=\"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n  //           <dt className=\"text-sm font-medium text-gray-500\">City</dt>\n  //           <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n  //             {profileData.city}\n  //           </dd>\n  //         </div>\n  //         <div className=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n  //           <dt className=\"text-sm font-medium text-gray-500\">\n  //             Connected CCTV Cameras\n  //           </dt>\n  //           <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n  //             <ul className=\"border border-gray-200 rounded-md divide-y divide-gray-200\">\n  //               {profileData.cctvCameras.map((camera) => (\n  //                 <li\n  //                   key={camera.id}\n  //                   className=\"pl-3 pr-4 py-3 flex items-center justify-between text-sm\"\n  //                 >\n  //                   <div className=\"w-0 flex-1 flex items-center\">\n  //                     <input\n  //                       id={`camera-ip-${camera.id}`}\n  //                       type=\"text\"\n  //                       value={camera.ip}\n  //                       onChange={(e) =>\n  //                         handleCameraIPChange(camera.id, e.target.value)\n  //                       }\n  //                       disabled={isLoading}\n  //                       className=\"mt-1 p-2 w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\n  //                     />\n  //                   </div>\n  //                 </li>\n  //               ))}\n  //             </ul>\n  //           </dd>\n  //         </div>\n  //       </dl>\n  //     </div>\n  //     <div className=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\n  //       <button\n  //         onClick={handleCancel}\n  //         className=\"inline-flex justify-center py-2 px-4 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n  //       >\n  //         Cancel\n  //       </button>\n  //       <button\n  //         onClick={handleSaveChanges}\n  //         className=\"ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n  //       >\n  //         {isLoading ? \"Saving ...\" : \"Save changes\"}\n  //       </button>\n  //     </div>\n  //   </div>\n  // );\n\n  const [users, setUsers] = useState([\n    // Example users data\n    // Add more user objects\n  ]);\n  const navigate = useNavigate();\n\n  const onAddUser = (userData) => {\n    // Here you would add the logic to send userData to the backend\n    // For now, we'll just add it to the local state\n    setUsers([...users, { ...userData, id: users.length + 1 }]);\n  };\n\n  return (\n    <div>\n      <h1>Admin Dashboard</h1>\n      <AddUser onAddUser={onAddUser} />\n      {/* Render UserCard components for each user */}\n    </div>\n  );\n};\n\nexport default Profile;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SACEC,MAAM,EACNC,MAAM,EACNC,WAAW,EACXC,MAAM,QACD,mCAAmC;AAC1C,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,QAAQ,QAAQ,mCAAmC;AAC5D,SAASC,iBAAiB,EAAEC,aAAa,QAAQ,aAAa;AAC9D,SAASC,OAAO,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpjB,QAAQ,CAAC;IACjC;IACA;EAAA,CACD,CAAC;EACF,MAAMkB,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAE9B,MAAMkB,SAAS,GAAIC,QAAQ,IAAK;IAC9B;IACA;IACAH,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;MAAE,GAAGI,QAAQ;MAAEC,EAAE,EAAEL,KAAK,CAACM,MAAM,GAAG;IAAE,CAAC,CAAC,CAAC;EAC7D,CAAC;EAED,oBACET,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBd,OAAA,CAACN,OAAO;MAACY,SAAS,EAAEA;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE9B,CAAC;AAEV,CAAC;AAACZ,EAAA,CAzJID,OAAO;EAAA,QA0IMb,WAAW;AAAA;AAAA2B,EAAA,GA1IxBd,OAAO;AA2Jb,eAAeA,OAAO;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}