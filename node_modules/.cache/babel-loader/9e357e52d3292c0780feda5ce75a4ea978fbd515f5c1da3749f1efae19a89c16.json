{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AYAN\\\\Desktop\\\\FYP\\\\WebPortion\\\\WebPortion-main\\\\src\\\\context\\\\UserContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useCallback } from \"react\";\nimport { login as loginUser } from \"./utils/api.js\"; // Ensure this path matches where your login function is defined\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false); // Initialize loading state\n\n  const login = useCallback(async (email, password) => {\n    setError(\"\"); // Reset error state\n    setLoading(true); // Set loading to true when login starts\n    try {\n      const data = await loginUser(email, password);\n      if (data.message === \"Login successful\") {\n        setIsAuthenticated(true);\n      } else {\n        setIsAuthenticated(false);\n        setError(\"Incorrect email or password\");\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setIsAuthenticated(false);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"An unexpected error occurred.\");\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      error,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"HK8je+Bom6qGrpSdoTOlQtBLxpc=\");\n_c = UserProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(UserContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useCallback","login","loginUser","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","isAuthenticated","setIsAuthenticated","error","setError","loading","setLoading","email","password","data","message","_error$response","_error$response$data","response","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/AYAN/Desktop/FYP/WebPortion/WebPortion-main/src/context/UserContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useCallback } from \"react\";\r\nimport { login as loginUser } from \"./utils/api.js\"; // Ensure this path matches where your login function is defined\r\n\r\nconst UserContext = createContext();\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false); // Initialize loading state\r\n\r\n  const login = useCallback(async (email, password) => {\r\n    setError(\"\"); // Reset error state\r\n    setLoading(true); // Set loading to true when login starts\r\n    try {\r\n      const data = await loginUser(email, password);\r\n      if (data.message === \"Login successful\") {\r\n        setIsAuthenticated(true);\r\n      } else {\r\n        setIsAuthenticated(false);\r\n        setError(\"Incorrect email or password\");\r\n      }\r\n    } catch (error) {\r\n      setIsAuthenticated(false);\r\n      setError(\r\n        error.response?.data?.message || \"An unexpected error occurred.\"\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <UserContext.Provider value={{ isAuthenticated, login, error, loading }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(UserContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,WAAW,QAAQ,OAAO;AAC/E,SAASC,KAAK,IAAIC,SAAS,QAAQ,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMS,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE/C,MAAMG,KAAK,GAAGD,WAAW,CAAC,OAAOe,KAAK,EAAEC,QAAQ,KAAK;IACnDJ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IACdE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IAClB,IAAI;MACF,MAAMG,IAAI,GAAG,MAAMf,SAAS,CAACa,KAAK,EAAEC,QAAQ,CAAC;MAC7C,IAAIC,IAAI,CAACC,OAAO,KAAK,kBAAkB,EAAE;QACvCR,kBAAkB,CAAC,IAAI,CAAC;MAC1B,CAAC,MAAM;QACLA,kBAAkB,CAAC,KAAK,CAAC;QACzBE,QAAQ,CAAC,6BAA6B,CAAC;MACzC;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MAAA,IAAAQ,eAAA,EAAAC,oBAAA;MACdV,kBAAkB,CAAC,KAAK,CAAC;MACzBE,QAAQ,CACN,EAAAO,eAAA,GAAAR,KAAK,CAACU,QAAQ,cAAAF,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBF,OAAO,KAAI,+BACnC,CAAC;IACH,CAAC,SAAS;MACRJ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEd,eAAe;MAAER,KAAK;MAAEU,KAAK;MAAEE;IAAQ,CAAE;IAAAN,QAAA,EACrEA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACnB,EAAA,CA/BWF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AAiCzB,OAAO,MAAMuB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM/B,UAAU,CAACM,WAAW,CAAC;AAAA;AAACyB,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}